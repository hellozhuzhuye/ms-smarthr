<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="top.smartsoftware.smarthr.mapper.AdjustSalaryMapper" >
  <resultMap id="BaseResultMap" type="top.smartsoftware.smarthr.model.AdjustSalary" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="eid" property="eid" jdbcType="INTEGER" />
    <result column="asDate" property="asDate" jdbcType="DATE" />
    <result column="beforeSalary" property="beforeSalary" jdbcType="DOUBLE" />
    <result column="afterSalary" property="afterSalary" jdbcType="DOUBLE" />
    <result column="reason" property="reason" jdbcType="VARCHAR" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, eid, asDate, beforeSalary, afterSalary, reason, remark
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from adjust_salary
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="getSalaryAccount" resultType="top.smartsoftware.smarthr.model.vo.AdjustSalaryVO">
  SELECT
      e.NAME as ename,
      adj.*
  FROM
      adjust_salary adj
      LEFT JOIN employee e ON adj.eid = e.id
  WHERE 1=1
  <if test="ename != null">
    AND e.name like concat('%',#{ename},'%')
  </if>
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from adjust_salary
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="top.smartsoftware.smarthr.model.AdjustSalary" >
    insert into adjust_salary (id, eid, asDate, 
      beforeSalary, afterSalary, reason, 
      remark)
    values (#{id,jdbcType=INTEGER}, #{eid,jdbcType=INTEGER}, #{asDate,jdbcType=DATE}, 
      #{beforeSalary,jdbcType=DOUBLE}, #{afterSalary,jdbcType=DOUBLE}, #{reason,jdbcType=VARCHAR},
      #{remark,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="top.smartsoftware.smarthr.model.AdjustSalary" >
    insert into adjust_salary
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="eid != null" >
        eid,
      </if>
      <if test="asDate != null" >
        asDate,
      </if>
      <if test="beforeSalary != null" >
        beforeSalary,
      </if>
      <if test="afterSalary != null" >
        afterSalary,
      </if>
      <if test="reason != null" >
        reason,
      </if>
      <if test="remark != null" >
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="eid != null" >
        #{eid,jdbcType=INTEGER},
      </if>
      <if test="asDate != null" >
        #{asDate,jdbcType=DATE},
      </if>
      <if test="beforeSalary != null" >
        #{beforeSalary,jdbcType=DOUBLE},
      </if>
      <if test="afterSalary != null" >
        #{afterSalary,jdbcType=DOUBLE},
      </if>
      <if test="reason != null" >
        #{reason,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="top.smartsoftware.smarthr.model.AdjustSalary" >
    update adjust_salary
    <set >
      <if test="eid != null" >
        eid = #{eid,jdbcType=INTEGER},
      </if>
      <if test="asDate != null" >
        asDate = #{asDate,jdbcType=DATE},
      </if>
      <if test="beforeSalary != null" >
        beforeSalary = #{beforeSalary,jdbcType=DOUBLE},
      </if>
      <if test="afterSalary != null" >
        afterSalary = #{afterSalary,jdbcType=DOUBLE},
      </if>
      <if test="reason != null" >
        reason = #{reason,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="top.smartsoftware.smarthr.model.AdjustSalary" >
    update adjust_salary
    set eid = #{eid,jdbcType=INTEGER},
      asDate = #{asDate,jdbcType=DATE},
      beforeSalary = #{beforeSalary,jdbcType=DOUBLE},
      afterSalary = #{afterSalary,jdbcType=DOUBLE},
      reason = #{reason,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>