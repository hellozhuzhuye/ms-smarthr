<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="top.smartsoftware.smarthr.mapper.EmployeeecMapper" >
  <resultMap id="BaseResultMap" type="top.smartsoftware.smarthr.model.Employeeec" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="eid" property="eid" jdbcType="INTEGER" />
    <result column="ecid" property="ecid" jdbcType="INTEGER" />
    <result column="beforePoint" property="beforePoint" jdbcType="INTEGER" />
    <result column="afterPoint" property="afterPoint" jdbcType="INTEGER" />
    <result column="ecDate" property="ecDate" jdbcType="DATE" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, eid, ecid, beforePoint, afterPoint, ecDate, remark
  </sql>
  <select id="getAllEmpEcs" resultMap="EmpEcVOMap">
      SELECT
          ee.id,
          e.workID,
          e.`name`,
          er.ecType,
          er.ecPoint,
          er.ecReason,
          ee.beforePoint,
          ee.afterPoint,
          ee.ecDate,
          ee.remark
      FROM
          `employee_ec` ee
      JOIN ec_rule er ON ee.ecid = er.id
      JOIN employee e ON ee.eid = e.id
      WHERE 1=1
    <if test="employee.name !=null and employee.name!=''">
      and e.name like concat('%',#{employee.name},'%')
    </if>
    <if test="employee.id !=null and employee.id!=''">
      and e.id=#{employee.id}
    </if>
    <if test="beginDateScope !=null">
      and ee.ecDate between #{beginDateScope[0]} and #{beginDateScope[1]}
    </if>
  </select>
  <resultMap id="EmpEcVOMap" type="top.smartsoftware.smarthr.model.vo.EmpEcVO">
    <result column="id" property="id" jdbcType="INTEGER" />
    <result column="workID" property="workID" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="ecType" property="ecType" jdbcType="INTEGER" />
    <result column="ecPoint" property="ecPoint" jdbcType="INTEGER" />
    <result column="ecReason" property="ecReason" jdbcType="VARCHAR" />
    <result column="beforePoint" property="beforePoint" jdbcType="INTEGER" />
    <result column="afterPoint" property="afterPoint" jdbcType="INTEGER" />
    <result column="ecDate" property="ecDate" jdbcType="DATE" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
  </resultMap>

</mapper>